require: rubocop-minitest

AllCops:
  NewCops: enable
  Exclude:
    - '**/db/schema.rb'
    - '.git/**/*'
    - 'node_modules/**/*'
    - 'tmp/**/*'
    - 'vendor/**/*'
    - '**/*_create_active_storage_tables.active_storage.rb'

Metrics/AbcSize:
  Exclude:
    - 'test/dummy/**/*.rb'

Metrics/ClassLength:
  Exclude:
    - 'test/**/*_test.rb'

Metrics/MethodLength:
  Exclude:
    - 'test/dummy/**/*.rb'

# `assert_equal([], object)` and `assert_equal({}, object)` are completely different,
# so this cop does not make sense to me.
Minitest/AssertEmptyLiteral:
  Enabled: false

# `assert_equal(false, object)` and `assert_equal(nil, object)` are different when it comes to their types,
# so this cop does not make sense to me.
Minitest/RefuteFalse:
  Enabled: false

# `after_initialize` requires many block length.
Metrics/BlockLength:
  Max: 50

# I don't care the style of if/unless.
Style/IfUnlessModifier:
  Enabled: false

# `Module.nesting` is empty in the current code, but we're not sure it will keep being that.
Style/RedundantConstantBase:
  Enabled: false

# If you feel annoyed by the current configuration, let's tweak the configuration!
